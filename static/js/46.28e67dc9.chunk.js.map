{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","utils/aave/contract_wrappers/lending_pool.ts"],"names":["_toArray","arr","LendingPoolEvents","LendingPoolContract","address","supportedProvider","txDefaults","logDecodeDependencies","deployedBytecode","ABI","_methodABIIndex","_subscriptionManager","classUtils","bindAll","SubscriptionManager","_web3Wrapper","forEach","item","index","type","methodAbi","name","methodName","this","methodAbiToFunctionSignature","callData","functionSignature","getFunctionSignature","_lookupAbiEncoder","strictDecode","strictDecodeReturnValue","getSelector","self","callAsync","defaultBlock","BaseContract","_assertCallParams","_performCallAsync","data","getABIEncodedTransactionData","rawCallResult","abiEncoder","_strictEncodeArguments","_addressesProvider","assert","isString","sendTransactionAsync","txData","opts","shouldValidate","_applyDefaultsToTxDataAsync","estimateGasAsync","bind","txDataWithDefaults","awaitTransactionSuccessAsync","_promiseWithTransactionHash","toLowerCase","_reserve","_amount","_referralCode","isBigNumber","isNumberOrBigNumber","_user","_aTokenBalanceAfterRedeem","_interestRateMode","_onBehalfOf","_useAsCollateral","isBoolean","_collateral","_purchaseAmount","_receiveAToken","_receiver","_params","eventName","indexFilterValues","callback","isVerbose","blockPollingIntervalMs","doesBelongToStringEnum","doesConformToSchema","schemas","indexFilterValuesSchema","isFunction","subscriptionToken","subscribe","unsubscribe","unsubscribeAll","blockRange","blockRangeSchema","getLogsAsync","logs","artifact","txDataSchema","addressSchema","numberSchema","jsNumber","undefined","compilerOutput","Error","provider","providerUtils","standardizeOrThrow","bytecode","evm","object","abi","logDecodeDependenciesAbiOnly","Object","keys","key","deployAsync","isHexString","constructorAbi","_lookupConstructorAbi","_formatABIDataItemList","inputs","_bigNumberToString","iface","ethers","Interface","deployInfo","deployFunction","encode","web3Wrapper","Web3Wrapper","_applyDefaultsToContractTxDataAsync","txHash","logUtils","log","txReceipt","contractAddress","contractInstance","constructorArgs","anonymous","indexed","outputs","constant","payable","stateMutability","contractName"],"mappings":"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","file":"static/js/46.28e67dc9.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","// tslint:disable:no-consecutive-blank-lines ordered-imports align trailing-comma enum-naming\n// tslint:disable:whitespace no-unbound-method no-trailing-whitespace\n// tslint:disable:no-unused-variable\nimport {\n\tAwaitTransactionSuccessOpts,\n\tContractFunctionObj,\n\tContractTxFunctionObj,\n\tSendTransactionOpts,\n\tBaseContract,\n\tSubscriptionManager,\n\tPromiseWithTransactionHash,\n\tmethodAbiToFunctionSignature,\n} from \"@0x/base-contract\";\nimport { schemas } from \"@0x/json-schemas\";\nimport {\n\tBlockParam,\n\tBlockRange,\n\tCallData,\n\tContractAbi,\n\tContractArtifact,\n\tDecodedLogArgs,\n\tLogWithDecodedArgs,\n\tMethodAbi,\n\tTransactionReceiptWithDecodedLogs,\n\tTxData,\n\tSupportedProvider,\n} from \"ethereum-types\";\nimport { BigNumber, classUtils, logUtils, providerUtils } from \"@0x/utils\";\nimport { EventCallback, IndexedFilterValues, SimpleContractArtifact } from \"@0x/types\";\n// @ts-ignore\nimport { Web3Wrapper } from \"@0x/web3-wrapper\";\nimport { assert } from \"@0x/assert\";\nimport * as ethers from \"ethers\";\n// tslint:enable:no-unused-variable\n\nexport type LendingPoolEventArgs =\n\t| LendingPoolBorrowEventArgs\n\t| LendingPoolDepositEventArgs\n\t| LendingPoolFlashLoanEventArgs\n\t| LendingPoolLiquidationCallEventArgs\n\t| LendingPoolOriginationFeeLiquidatedEventArgs\n\t| LendingPoolRebalanceStableBorrowRateEventArgs\n\t| LendingPoolRedeemUnderlyingEventArgs\n\t| LendingPoolRepayEventArgs\n\t| LendingPoolReserveUsedAsCollateralDisabledEventArgs\n\t| LendingPoolReserveUsedAsCollateralEnabledEventArgs\n\t| LendingPoolSwapEventArgs;\n\nexport enum LendingPoolEvents {\n\tBorrow = \"Borrow\",\n\tDeposit = \"Deposit\",\n\tFlashLoan = \"FlashLoan\",\n\tLiquidationCall = \"LiquidationCall\",\n\tOriginationFeeLiquidated = \"OriginationFeeLiquidated\",\n\tRebalanceStableBorrowRate = \"RebalanceStableBorrowRate\",\n\tRedeemUnderlying = \"RedeemUnderlying\",\n\tRepay = \"Repay\",\n\tReserveUsedAsCollateralDisabled = \"ReserveUsedAsCollateralDisabled\",\n\tReserveUsedAsCollateralEnabled = \"ReserveUsedAsCollateralEnabled\",\n\tSwap = \"Swap\",\n}\n\nexport interface LendingPoolBorrowEventArgs extends DecodedLogArgs {\n\t_reserve: string;\n\t_user: string;\n\t_amount: BigNumber;\n\t_borrowRateMode: BigNumber;\n\t_borrowRate: BigNumber;\n\t_originationFee: BigNumber;\n\t_borrowBalanceIncrease: BigNumber;\n\t_referral: BigNumber;\n\t_timestamp: BigNumber;\n}\n\nexport interface LendingPoolDepositEventArgs extends DecodedLogArgs {\n\t_reserve: string;\n\t_user: string;\n\t_amount: BigNumber;\n\t_referral: BigNumber;\n\t_timestamp: BigNumber;\n}\n\nexport interface LendingPoolFlashLoanEventArgs extends DecodedLogArgs {\n\t_target: string;\n\t_reserve: string;\n\t_amount: BigNumber;\n\t_totalFee: BigNumber;\n\t_protocolFee: BigNumber;\n\t_timestamp: BigNumber;\n}\n\nexport interface LendingPoolLiquidationCallEventArgs extends DecodedLogArgs {\n\t_collateral: string;\n\t_reserve: string;\n\t_user: string;\n\t_purchaseAmount: BigNumber;\n\t_liquidatedCollateralAmount: BigNumber;\n\t_accruedBorrowInterest: BigNumber;\n\t_liquidator: string;\n\t_receiveAToken: boolean;\n\t_timestamp: BigNumber;\n}\n\nexport interface LendingPoolOriginationFeeLiquidatedEventArgs extends DecodedLogArgs {\n\t_collateral: string;\n\t_reserve: string;\n\t_user: string;\n\t_feeLiquidated: BigNumber;\n\t_liquidatedCollateralForFee: BigNumber;\n\t_timestamp: BigNumber;\n}\n\nexport interface LendingPoolRebalanceStableBorrowRateEventArgs extends DecodedLogArgs {\n\t_reserve: string;\n\t_user: string;\n\t_newStableRate: BigNumber;\n\t_borrowBalanceIncrease: BigNumber;\n\t_timestamp: BigNumber;\n}\n\nexport interface LendingPoolRedeemUnderlyingEventArgs extends DecodedLogArgs {\n\t_reserve: string;\n\t_user: string;\n\t_amount: BigNumber;\n\t_timestamp: BigNumber;\n}\n\nexport interface LendingPoolRepayEventArgs extends DecodedLogArgs {\n\t_reserve: string;\n\t_user: string;\n\t_repayer: string;\n\t_amountMinusFees: BigNumber;\n\t_fees: BigNumber;\n\t_borrowBalanceIncrease: BigNumber;\n\t_timestamp: BigNumber;\n}\n\nexport interface LendingPoolReserveUsedAsCollateralDisabledEventArgs extends DecodedLogArgs {\n\t_reserve: string;\n\t_user: string;\n}\n\nexport interface LendingPoolReserveUsedAsCollateralEnabledEventArgs extends DecodedLogArgs {\n\t_reserve: string;\n\t_user: string;\n}\n\nexport interface LendingPoolSwapEventArgs extends DecodedLogArgs {\n\t_reserve: string;\n\t_user: string;\n\t_newRateMode: BigNumber;\n\t_newRate: BigNumber;\n\t_borrowBalanceIncrease: BigNumber;\n\t_timestamp: BigNumber;\n}\n\n/* istanbul ignore next */\n// tslint:disable:no-parameter-reassignment\n// tslint:disable-next-line:class-name\nexport class LendingPoolContract extends BaseContract {\n\t/**\n\t * @ignore\n\t */\n\tpublic static deployedBytecode: string | undefined;\n\tpublic static contractName = \"LendingPool\";\n\tprivate readonly _methodABIIndex: { [name: string]: number } = {};\n\tprivate readonly _subscriptionManager: SubscriptionManager<LendingPoolEventArgs, LendingPoolEvents>;\n\tpublic static async deployFrom0xArtifactAsync(\n\t\tartifact: ContractArtifact | SimpleContractArtifact,\n\t\tsupportedProvider: SupportedProvider,\n\t\ttxDefaults: Partial<TxData>,\n\t\tlogDecodeDependencies: { [contractName: string]: ContractArtifact | SimpleContractArtifact }\n\t): Promise<LendingPoolContract> {\n\t\tassert.doesConformToSchema(\"txDefaults\", txDefaults, schemas.txDataSchema, [\n\t\t\tschemas.addressSchema,\n\t\t\tschemas.numberSchema,\n\t\t\tschemas.jsNumber,\n\t\t]);\n\t\tif (artifact.compilerOutput === undefined) {\n\t\t\tthrow new Error(\"Compiler output not found in the artifact file\");\n\t\t}\n\t\tconst provider = providerUtils.standardizeOrThrow(supportedProvider);\n\t\tconst bytecode = artifact.compilerOutput.evm.bytecode.object;\n\t\tconst abi = artifact.compilerOutput.abi;\n\t\tconst logDecodeDependenciesAbiOnly: { [contractName: string]: ContractAbi } = {};\n\t\tif (Object.keys(logDecodeDependencies) !== undefined) {\n\t\t\tfor (const key of Object.keys(logDecodeDependencies)) {\n\t\t\t\tlogDecodeDependenciesAbiOnly[key] = logDecodeDependencies[key].compilerOutput.abi;\n\t\t\t}\n\t\t}\n\t\treturn LendingPoolContract.deployAsync(bytecode, abi, provider, txDefaults, logDecodeDependenciesAbiOnly);\n\t}\n\tpublic static async deployAsync(\n\t\tbytecode: string,\n\t\tabi: ContractAbi,\n\t\tsupportedProvider: SupportedProvider,\n\t\ttxDefaults: Partial<TxData>,\n\t\tlogDecodeDependencies: { [contractName: string]: ContractAbi }\n\t): Promise<LendingPoolContract> {\n\t\tassert.isHexString(\"bytecode\", bytecode);\n\t\tassert.doesConformToSchema(\"txDefaults\", txDefaults, schemas.txDataSchema, [\n\t\t\tschemas.addressSchema,\n\t\t\tschemas.numberSchema,\n\t\t\tschemas.jsNumber,\n\t\t]);\n\t\tconst provider = providerUtils.standardizeOrThrow(supportedProvider);\n\t\tconst constructorAbi = BaseContract._lookupConstructorAbi(abi);\n\t\t[] = BaseContract._formatABIDataItemList(constructorAbi.inputs, [], BaseContract._bigNumberToString);\n\t\t// @ts-ignore\n\t\tconst iface = new ethers.utils.Interface(abi);\n\t\t// @ts-ignore\n\t\tconst deployInfo = iface.deployFunction;\n\t\tconst txData = deployInfo.encode(bytecode, []);\n\t\tconst web3Wrapper = new Web3Wrapper(provider);\n\t\tconst txDataWithDefaults = await BaseContract._applyDefaultsToContractTxDataAsync(\n\t\t\t{\n\t\t\t\tdata: txData,\n\t\t\t\t...txDefaults,\n\t\t\t},\n\t\t\tweb3Wrapper.estimateGasAsync.bind(web3Wrapper)\n\t\t);\n\t\tconst txHash = await web3Wrapper.sendTransactionAsync(txDataWithDefaults);\n\t\tlogUtils.log(`transactionHash: ${txHash}`);\n\t\tconst txReceipt = await web3Wrapper.awaitTransactionSuccessAsync(txHash);\n\t\tlogUtils.log(`LendingPool successfully deployed at ${txReceipt.contractAddress}`);\n\t\tconst contractInstance = new LendingPoolContract(\n\t\t\ttxReceipt.contractAddress as string,\n\t\t\tprovider,\n\t\t\ttxDefaults,\n\t\t\tlogDecodeDependencies\n\t\t);\n\t\tcontractInstance.constructorArgs = [];\n\t\treturn contractInstance;\n\t}\n\n\t/**\n\t * @returns      The contract ABI\n\t */\n\tpublic static ABI(): ContractAbi {\n\t\tconst abi = [\n\t\t\t{\n\t\t\t\tanonymous: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_amount\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_borrowRateMode\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_borrowRate\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_originationFee\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_borrowBalanceIncrease\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_referral\",\n\t\t\t\t\t\ttype: \"uint16\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_timestamp\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"Borrow\",\n\t\t\t\toutputs: [],\n\t\t\t\ttype: \"event\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tanonymous: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_amount\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_referral\",\n\t\t\t\t\t\ttype: \"uint16\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_timestamp\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"Deposit\",\n\t\t\t\toutputs: [],\n\t\t\t\ttype: \"event\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tanonymous: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_target\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_amount\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_totalFee\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_protocolFee\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_timestamp\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"FlashLoan\",\n\t\t\t\toutputs: [],\n\t\t\t\ttype: \"event\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tanonymous: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_collateral\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_purchaseAmount\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_liquidatedCollateralAmount\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_accruedBorrowInterest\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_liquidator\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_receiveAToken\",\n\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_timestamp\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"LiquidationCall\",\n\t\t\t\toutputs: [],\n\t\t\t\ttype: \"event\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tanonymous: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_collateral\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_feeLiquidated\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_liquidatedCollateralForFee\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_timestamp\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"OriginationFeeLiquidated\",\n\t\t\t\toutputs: [],\n\t\t\t\ttype: \"event\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tanonymous: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_newStableRate\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_borrowBalanceIncrease\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_timestamp\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"RebalanceStableBorrowRate\",\n\t\t\t\toutputs: [],\n\t\t\t\ttype: \"event\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tanonymous: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_amount\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_timestamp\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"RedeemUnderlying\",\n\t\t\t\toutputs: [],\n\t\t\t\ttype: \"event\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tanonymous: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_repayer\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_amountMinusFees\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_fees\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_borrowBalanceIncrease\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_timestamp\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"Repay\",\n\t\t\t\toutputs: [],\n\t\t\t\ttype: \"event\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tanonymous: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"ReserveUsedAsCollateralDisabled\",\n\t\t\t\toutputs: [],\n\t\t\t\ttype: \"event\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tanonymous: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"ReserveUsedAsCollateralEnabled\",\n\t\t\t\toutputs: [],\n\t\t\t\ttype: \"event\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tanonymous: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t\tindexed: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_newRateMode\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_newRate\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_borrowBalanceIncrease\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_timestamp\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t\tindexed: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"Swap\",\n\t\t\t\toutputs: [],\n\t\t\t\ttype: \"event\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: true,\n\t\t\t\tinputs: [],\n\t\t\t\tname: \"LENDINGPOOL_REVISION\",\n\t\t\t\toutputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"view\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: true,\n\t\t\t\tinputs: [],\n\t\t\t\tname: \"UINT_MAX_VALUE\",\n\t\t\t\toutputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"view\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: true,\n\t\t\t\tinputs: [],\n\t\t\t\tname: \"addressesProvider\",\n\t\t\t\toutputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"view\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: true,\n\t\t\t\tinputs: [],\n\t\t\t\tname: \"core\",\n\t\t\t\toutputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"view\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: true,\n\t\t\t\tinputs: [],\n\t\t\t\tname: \"dataProvider\",\n\t\t\t\toutputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"view\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: true,\n\t\t\t\tinputs: [],\n\t\t\t\tname: \"parametersProvider\",\n\t\t\t\toutputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"view\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_addressesProvider\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"initialize\",\n\t\t\t\toutputs: [],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"nonpayable\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_amount\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_referralCode\",\n\t\t\t\t\t\ttype: \"uint16\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"deposit\",\n\t\t\t\toutputs: [],\n\t\t\t\tpayable: true,\n\t\t\t\tstateMutability: \"payable\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_amount\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_aTokenBalanceAfterRedeem\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"redeemUnderlying\",\n\t\t\t\toutputs: [],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"nonpayable\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_amount\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_interestRateMode\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_referralCode\",\n\t\t\t\t\t\ttype: \"uint16\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"borrow\",\n\t\t\t\toutputs: [],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"nonpayable\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_amount\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_onBehalfOf\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"repay\",\n\t\t\t\toutputs: [],\n\t\t\t\tpayable: true,\n\t\t\t\tstateMutability: \"payable\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"swapBorrowRateMode\",\n\t\t\t\toutputs: [],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"nonpayable\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"rebalanceStableBorrowRate\",\n\t\t\t\toutputs: [],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"nonpayable\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_useAsCollateral\",\n\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"setUserUseReserveAsCollateral\",\n\t\t\t\toutputs: [],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"nonpayable\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_collateral\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_purchaseAmount\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_receiveAToken\",\n\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"liquidationCall\",\n\t\t\t\toutputs: [],\n\t\t\t\tpayable: true,\n\t\t\t\tstateMutability: \"payable\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: false,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_receiver\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_amount\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_params\",\n\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"flashLoan\",\n\t\t\t\toutputs: [],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"nonpayable\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: true,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"getReserveConfigurationData\",\n\t\t\t\toutputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"ltv\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"liquidationThreshold\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"liquidationBonus\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"interestRateStrategyAddress\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"usageAsCollateralEnabled\",\n\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"borrowingEnabled\",\n\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"stableBorrowRateEnabled\",\n\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"isActive\",\n\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"view\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: true,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"getReserveData\",\n\t\t\t\toutputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"totalLiquidity\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"availableLiquidity\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"totalBorrowsStable\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"totalBorrowsVariable\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"liquidityRate\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"variableBorrowRate\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"stableBorrowRate\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"averageStableBorrowRate\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"utilizationRate\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"liquidityIndex\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"variableBorrowIndex\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"aTokenAddress\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"lastUpdateTimestamp\",\n\t\t\t\t\t\ttype: \"uint40\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"view\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: true,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"getUserAccountData\",\n\t\t\t\toutputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"totalLiquidityETH\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"totalCollateralETH\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"totalBorrowsETH\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"totalFeesETH\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"availableBorrowsETH\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"currentLiquidationThreshold\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"ltv\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"healthFactor\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"view\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: true,\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_reserve\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"_user\",\n\t\t\t\t\t\ttype: \"address\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tname: \"getUserReserveData\",\n\t\t\t\toutputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"currentATokenBalance\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"currentBorrowBalance\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"principalBorrowBalance\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"borrowRateMode\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"borrowRate\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"liquidityRate\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"originationFee\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"variableBorrowIndex\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"lastUpdateTimestamp\",\n\t\t\t\t\t\ttype: \"uint256\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"usageAsCollateralEnabled\",\n\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"view\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tconstant: true,\n\t\t\t\tinputs: [],\n\t\t\t\tname: \"getReserves\",\n\t\t\t\toutputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\ttype: \"address[]\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpayable: false,\n\t\t\t\tstateMutability: \"view\",\n\t\t\t\ttype: \"function\",\n\t\t\t},\n\t\t] as ContractAbi;\n\t\treturn abi;\n\t}\n\n\tpublic getFunctionSignature(methodName: string): string {\n\t\tconst index = this._methodABIIndex[methodName];\n\t\tconst methodAbi = LendingPoolContract.ABI()[index] as MethodAbi; // tslint:disable-line:no-unnecessary-type-assertion\n\t\tconst functionSignature = methodAbiToFunctionSignature(methodAbi);\n\t\treturn functionSignature;\n\t}\n\tpublic getABIDecodedTransactionData<T>(methodName: string, callData: string): T {\n\t\tconst functionSignature = this.getFunctionSignature(methodName);\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\tconst abiDecodedCallData = abiEncoder.strictDecode<T>(callData);\n\t\treturn abiDecodedCallData;\n\t}\n\tpublic getABIDecodedReturnData<T>(methodName: string, callData: string): T {\n\t\tconst functionSignature = this.getFunctionSignature(methodName);\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\tconst abiDecodedCallData = abiEncoder.strictDecodeReturnValue<T>(callData);\n\t\treturn abiDecodedCallData;\n\t}\n\tpublic getSelector(methodName: string): string {\n\t\tconst functionSignature = this.getFunctionSignature(methodName);\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\treturn abiEncoder.getSelector();\n\t}\n\n\tpublic LENDINGPOOL_REVISION(): ContractFunctionObj<BigNumber> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tconst functionSignature = \"LENDINGPOOL_REVISION()\";\n\n\t\treturn {\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<BigNumber> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<BigNumber>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, []);\n\t\t\t},\n\t\t};\n\t}\n\tpublic UINT_MAX_VALUE(): ContractFunctionObj<BigNumber> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tconst functionSignature = \"UINT_MAX_VALUE()\";\n\n\t\treturn {\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<BigNumber> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<BigNumber>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, []);\n\t\t\t},\n\t\t};\n\t}\n\tpublic addressesProvider(): ContractFunctionObj<string> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tconst functionSignature = \"addressesProvider()\";\n\n\t\treturn {\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<string> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<string>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, []);\n\t\t\t},\n\t\t};\n\t}\n\tpublic core(): ContractFunctionObj<string> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tconst functionSignature = \"core()\";\n\n\t\treturn {\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<string> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<string>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, []);\n\t\t\t},\n\t\t};\n\t}\n\tpublic dataProvider(): ContractFunctionObj<string> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tconst functionSignature = \"dataProvider()\";\n\n\t\treturn {\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<string> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<string>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, []);\n\t\t\t},\n\t\t};\n\t}\n\tpublic parametersProvider(): ContractFunctionObj<string> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tconst functionSignature = \"parametersProvider()\";\n\n\t\treturn {\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<string> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<string>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, []);\n\t\t\t},\n\t\t};\n\t}\n\tpublic initialize(_addressesProvider: string): ContractTxFunctionObj<void> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_addressesProvider\", _addressesProvider);\n\t\tconst functionSignature = \"initialize(address)\";\n\n\t\treturn {\n\t\t\tasync sendTransactionAsync(\n\t\t\t\ttxData?: Partial<TxData> | undefined,\n\t\t\t\topts: SendTransactionOpts = { shouldValidate: true }\n\t\t\t): Promise<string> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync(\n\t\t\t\t\t{ ...txData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tthis.estimateGasAsync.bind(this)\n\t\t\t\t);\n\t\t\t\tif (opts.shouldValidate !== false) {\n\t\t\t\t\tawait this.callAsync(txDataWithDefaults);\n\t\t\t\t}\n\t\t\t\treturn self._web3Wrapper.sendTransactionAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tawaitTransactionSuccessAsync(\n\t\t\t\ttxData?: Partial<TxData>,\n\t\t\t\topts: AwaitTransactionSuccessOpts = { shouldValidate: true }\n\t\t\t): PromiseWithTransactionHash<TransactionReceiptWithDecodedLogs> {\n\t\t\t\treturn self._promiseWithTransactionHash(this.sendTransactionAsync(txData, opts), opts);\n\t\t\t},\n\t\t\tasync estimateGasAsync(txData?: Partial<TxData> | undefined): Promise<number> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync({\n\t\t\t\t\t...txData,\n\t\t\t\t\tdata: this.getABIEncodedTransactionData(),\n\t\t\t\t});\n\t\t\t\treturn self._web3Wrapper.estimateGasAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<void> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<void>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [_addressesProvider.toLowerCase()]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic deposit(\n\t\t_reserve: string,\n\t\t_amount: BigNumber,\n\t\t_referralCode: number | BigNumber\n\t): ContractTxFunctionObj<void> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_reserve\", _reserve);\n\t\tassert.isBigNumber(\"_amount\", _amount);\n\t\tassert.isNumberOrBigNumber(\"_referralCode\", _referralCode);\n\t\tconst functionSignature = \"deposit(address,uint256,uint16)\";\n\n\t\treturn {\n\t\t\tasync sendTransactionAsync(\n\t\t\t\ttxData?: Partial<TxData> | undefined,\n\t\t\t\topts: SendTransactionOpts = { shouldValidate: true }\n\t\t\t): Promise<string> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync(\n\t\t\t\t\t{ ...txData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tthis.estimateGasAsync.bind(this)\n\t\t\t\t);\n\t\t\t\tif (opts.shouldValidate !== false) {\n\t\t\t\t\tawait this.callAsync(txDataWithDefaults);\n\t\t\t\t}\n\t\t\t\treturn self._web3Wrapper.sendTransactionAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tawaitTransactionSuccessAsync(\n\t\t\t\ttxData?: Partial<TxData>,\n\t\t\t\topts: AwaitTransactionSuccessOpts = { shouldValidate: true }\n\t\t\t): PromiseWithTransactionHash<TransactionReceiptWithDecodedLogs> {\n\t\t\t\treturn self._promiseWithTransactionHash(this.sendTransactionAsync(txData, opts), opts);\n\t\t\t},\n\t\t\tasync estimateGasAsync(txData?: Partial<TxData> | undefined): Promise<number> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync({\n\t\t\t\t\t...txData,\n\t\t\t\t\tdata: this.getABIEncodedTransactionData(),\n\t\t\t\t});\n\t\t\t\treturn self._web3Wrapper.estimateGasAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<void> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<void>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [_reserve.toLowerCase(), _amount, _referralCode]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic redeemUnderlying(\n\t\t_reserve: string,\n\t\t_user: string,\n\t\t_amount: BigNumber,\n\t\t_aTokenBalanceAfterRedeem: BigNumber\n\t): ContractTxFunctionObj<void> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_reserve\", _reserve);\n\t\tassert.isString(\"_user\", _user);\n\t\tassert.isBigNumber(\"_amount\", _amount);\n\t\tassert.isBigNumber(\"_aTokenBalanceAfterRedeem\", _aTokenBalanceAfterRedeem);\n\t\tconst functionSignature = \"redeemUnderlying(address,address,uint256,uint256)\";\n\n\t\treturn {\n\t\t\tasync sendTransactionAsync(\n\t\t\t\ttxData?: Partial<TxData> | undefined,\n\t\t\t\topts: SendTransactionOpts = { shouldValidate: true }\n\t\t\t): Promise<string> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync(\n\t\t\t\t\t{ ...txData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tthis.estimateGasAsync.bind(this)\n\t\t\t\t);\n\t\t\t\tif (opts.shouldValidate !== false) {\n\t\t\t\t\tawait this.callAsync(txDataWithDefaults);\n\t\t\t\t}\n\t\t\t\treturn self._web3Wrapper.sendTransactionAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tawaitTransactionSuccessAsync(\n\t\t\t\ttxData?: Partial<TxData>,\n\t\t\t\topts: AwaitTransactionSuccessOpts = { shouldValidate: true }\n\t\t\t): PromiseWithTransactionHash<TransactionReceiptWithDecodedLogs> {\n\t\t\t\treturn self._promiseWithTransactionHash(this.sendTransactionAsync(txData, opts), opts);\n\t\t\t},\n\t\t\tasync estimateGasAsync(txData?: Partial<TxData> | undefined): Promise<number> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync({\n\t\t\t\t\t...txData,\n\t\t\t\t\tdata: this.getABIEncodedTransactionData(),\n\t\t\t\t});\n\t\t\t\treturn self._web3Wrapper.estimateGasAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<void> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<void>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [\n\t\t\t\t\t_reserve.toLowerCase(),\n\t\t\t\t\t_user.toLowerCase(),\n\t\t\t\t\t_amount,\n\t\t\t\t\t_aTokenBalanceAfterRedeem,\n\t\t\t\t]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic borrow(\n\t\t_reserve: string,\n\t\t_amount: BigNumber,\n\t\t_interestRateMode: BigNumber,\n\t\t_referralCode: number | BigNumber\n\t): ContractTxFunctionObj<void> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_reserve\", _reserve);\n\t\tassert.isBigNumber(\"_amount\", _amount);\n\t\tassert.isBigNumber(\"_interestRateMode\", _interestRateMode);\n\t\tassert.isNumberOrBigNumber(\"_referralCode\", _referralCode);\n\t\tconst functionSignature = \"borrow(address,uint256,uint256,uint16)\";\n\n\t\treturn {\n\t\t\tasync sendTransactionAsync(\n\t\t\t\ttxData?: Partial<TxData> | undefined,\n\t\t\t\topts: SendTransactionOpts = { shouldValidate: true }\n\t\t\t): Promise<string> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync(\n\t\t\t\t\t{ ...txData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tthis.estimateGasAsync.bind(this)\n\t\t\t\t);\n\t\t\t\tif (opts.shouldValidate !== false) {\n\t\t\t\t\tawait this.callAsync(txDataWithDefaults);\n\t\t\t\t}\n\t\t\t\treturn self._web3Wrapper.sendTransactionAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tawaitTransactionSuccessAsync(\n\t\t\t\ttxData?: Partial<TxData>,\n\t\t\t\topts: AwaitTransactionSuccessOpts = { shouldValidate: true }\n\t\t\t): PromiseWithTransactionHash<TransactionReceiptWithDecodedLogs> {\n\t\t\t\treturn self._promiseWithTransactionHash(this.sendTransactionAsync(txData, opts), opts);\n\t\t\t},\n\t\t\tasync estimateGasAsync(txData?: Partial<TxData> | undefined): Promise<number> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync({\n\t\t\t\t\t...txData,\n\t\t\t\t\tdata: this.getABIEncodedTransactionData(),\n\t\t\t\t});\n\t\t\t\treturn self._web3Wrapper.estimateGasAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<void> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<void>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [\n\t\t\t\t\t_reserve.toLowerCase(),\n\t\t\t\t\t_amount,\n\t\t\t\t\t_interestRateMode,\n\t\t\t\t\t_referralCode,\n\t\t\t\t]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic repay(_reserve: string, _amount: BigNumber, _onBehalfOf: string): ContractTxFunctionObj<void> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_reserve\", _reserve);\n\t\tassert.isBigNumber(\"_amount\", _amount);\n\t\tassert.isString(\"_onBehalfOf\", _onBehalfOf);\n\t\tconst functionSignature = \"repay(address,uint256,address)\";\n\n\t\treturn {\n\t\t\tasync sendTransactionAsync(\n\t\t\t\ttxData?: Partial<TxData> | undefined,\n\t\t\t\topts: SendTransactionOpts = { shouldValidate: true }\n\t\t\t): Promise<string> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync(\n\t\t\t\t\t{ ...txData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tthis.estimateGasAsync.bind(this)\n\t\t\t\t);\n\t\t\t\tif (opts.shouldValidate !== false) {\n\t\t\t\t\tawait this.callAsync(txDataWithDefaults);\n\t\t\t\t}\n\t\t\t\treturn self._web3Wrapper.sendTransactionAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tawaitTransactionSuccessAsync(\n\t\t\t\ttxData?: Partial<TxData>,\n\t\t\t\topts: AwaitTransactionSuccessOpts = { shouldValidate: true }\n\t\t\t): PromiseWithTransactionHash<TransactionReceiptWithDecodedLogs> {\n\t\t\t\treturn self._promiseWithTransactionHash(this.sendTransactionAsync(txData, opts), opts);\n\t\t\t},\n\t\t\tasync estimateGasAsync(txData?: Partial<TxData> | undefined): Promise<number> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync({\n\t\t\t\t\t...txData,\n\t\t\t\t\tdata: this.getABIEncodedTransactionData(),\n\t\t\t\t});\n\t\t\t\treturn self._web3Wrapper.estimateGasAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<void> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<void>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [\n\t\t\t\t\t_reserve.toLowerCase(),\n\t\t\t\t\t_amount,\n\t\t\t\t\t_onBehalfOf.toLowerCase(),\n\t\t\t\t]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic swapBorrowRateMode(_reserve: string): ContractTxFunctionObj<void> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_reserve\", _reserve);\n\t\tconst functionSignature = \"swapBorrowRateMode(address)\";\n\n\t\treturn {\n\t\t\tasync sendTransactionAsync(\n\t\t\t\ttxData?: Partial<TxData> | undefined,\n\t\t\t\topts: SendTransactionOpts = { shouldValidate: true }\n\t\t\t): Promise<string> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync(\n\t\t\t\t\t{ ...txData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tthis.estimateGasAsync.bind(this)\n\t\t\t\t);\n\t\t\t\tif (opts.shouldValidate !== false) {\n\t\t\t\t\tawait this.callAsync(txDataWithDefaults);\n\t\t\t\t}\n\t\t\t\treturn self._web3Wrapper.sendTransactionAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tawaitTransactionSuccessAsync(\n\t\t\t\ttxData?: Partial<TxData>,\n\t\t\t\topts: AwaitTransactionSuccessOpts = { shouldValidate: true }\n\t\t\t): PromiseWithTransactionHash<TransactionReceiptWithDecodedLogs> {\n\t\t\t\treturn self._promiseWithTransactionHash(this.sendTransactionAsync(txData, opts), opts);\n\t\t\t},\n\t\t\tasync estimateGasAsync(txData?: Partial<TxData> | undefined): Promise<number> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync({\n\t\t\t\t\t...txData,\n\t\t\t\t\tdata: this.getABIEncodedTransactionData(),\n\t\t\t\t});\n\t\t\t\treturn self._web3Wrapper.estimateGasAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<void> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<void>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [_reserve.toLowerCase()]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic rebalanceStableBorrowRate(_reserve: string, _user: string): ContractTxFunctionObj<void> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_reserve\", _reserve);\n\t\tassert.isString(\"_user\", _user);\n\t\tconst functionSignature = \"rebalanceStableBorrowRate(address,address)\";\n\n\t\treturn {\n\t\t\tasync sendTransactionAsync(\n\t\t\t\ttxData?: Partial<TxData> | undefined,\n\t\t\t\topts: SendTransactionOpts = { shouldValidate: true }\n\t\t\t): Promise<string> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync(\n\t\t\t\t\t{ ...txData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tthis.estimateGasAsync.bind(this)\n\t\t\t\t);\n\t\t\t\tif (opts.shouldValidate !== false) {\n\t\t\t\t\tawait this.callAsync(txDataWithDefaults);\n\t\t\t\t}\n\t\t\t\treturn self._web3Wrapper.sendTransactionAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tawaitTransactionSuccessAsync(\n\t\t\t\ttxData?: Partial<TxData>,\n\t\t\t\topts: AwaitTransactionSuccessOpts = { shouldValidate: true }\n\t\t\t): PromiseWithTransactionHash<TransactionReceiptWithDecodedLogs> {\n\t\t\t\treturn self._promiseWithTransactionHash(this.sendTransactionAsync(txData, opts), opts);\n\t\t\t},\n\t\t\tasync estimateGasAsync(txData?: Partial<TxData> | undefined): Promise<number> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync({\n\t\t\t\t\t...txData,\n\t\t\t\t\tdata: this.getABIEncodedTransactionData(),\n\t\t\t\t});\n\t\t\t\treturn self._web3Wrapper.estimateGasAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<void> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<void>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [_reserve.toLowerCase(), _user.toLowerCase()]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic setUserUseReserveAsCollateral(_reserve: string, _useAsCollateral: boolean): ContractTxFunctionObj<void> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_reserve\", _reserve);\n\t\tassert.isBoolean(\"_useAsCollateral\", _useAsCollateral);\n\t\tconst functionSignature = \"setUserUseReserveAsCollateral(address,bool)\";\n\n\t\treturn {\n\t\t\tasync sendTransactionAsync(\n\t\t\t\ttxData?: Partial<TxData> | undefined,\n\t\t\t\topts: SendTransactionOpts = { shouldValidate: true }\n\t\t\t): Promise<string> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync(\n\t\t\t\t\t{ ...txData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tthis.estimateGasAsync.bind(this)\n\t\t\t\t);\n\t\t\t\tif (opts.shouldValidate !== false) {\n\t\t\t\t\tawait this.callAsync(txDataWithDefaults);\n\t\t\t\t}\n\t\t\t\treturn self._web3Wrapper.sendTransactionAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tawaitTransactionSuccessAsync(\n\t\t\t\ttxData?: Partial<TxData>,\n\t\t\t\topts: AwaitTransactionSuccessOpts = { shouldValidate: true }\n\t\t\t): PromiseWithTransactionHash<TransactionReceiptWithDecodedLogs> {\n\t\t\t\treturn self._promiseWithTransactionHash(this.sendTransactionAsync(txData, opts), opts);\n\t\t\t},\n\t\t\tasync estimateGasAsync(txData?: Partial<TxData> | undefined): Promise<number> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync({\n\t\t\t\t\t...txData,\n\t\t\t\t\tdata: this.getABIEncodedTransactionData(),\n\t\t\t\t});\n\t\t\t\treturn self._web3Wrapper.estimateGasAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<void> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<void>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [_reserve.toLowerCase(), _useAsCollateral]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic liquidationCall(\n\t\t_collateral: string,\n\t\t_reserve: string,\n\t\t_user: string,\n\t\t_purchaseAmount: BigNumber,\n\t\t_receiveAToken: boolean\n\t): ContractTxFunctionObj<void> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_collateral\", _collateral);\n\t\tassert.isString(\"_reserve\", _reserve);\n\t\tassert.isString(\"_user\", _user);\n\t\tassert.isBigNumber(\"_purchaseAmount\", _purchaseAmount);\n\t\tassert.isBoolean(\"_receiveAToken\", _receiveAToken);\n\t\tconst functionSignature = \"liquidationCall(address,address,address,uint256,bool)\";\n\n\t\treturn {\n\t\t\tasync sendTransactionAsync(\n\t\t\t\ttxData?: Partial<TxData> | undefined,\n\t\t\t\topts: SendTransactionOpts = { shouldValidate: true }\n\t\t\t): Promise<string> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync(\n\t\t\t\t\t{ ...txData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tthis.estimateGasAsync.bind(this)\n\t\t\t\t);\n\t\t\t\tif (opts.shouldValidate !== false) {\n\t\t\t\t\tawait this.callAsync(txDataWithDefaults);\n\t\t\t\t}\n\t\t\t\treturn self._web3Wrapper.sendTransactionAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tawaitTransactionSuccessAsync(\n\t\t\t\ttxData?: Partial<TxData>,\n\t\t\t\topts: AwaitTransactionSuccessOpts = { shouldValidate: true }\n\t\t\t): PromiseWithTransactionHash<TransactionReceiptWithDecodedLogs> {\n\t\t\t\treturn self._promiseWithTransactionHash(this.sendTransactionAsync(txData, opts), opts);\n\t\t\t},\n\t\t\tasync estimateGasAsync(txData?: Partial<TxData> | undefined): Promise<number> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync({\n\t\t\t\t\t...txData,\n\t\t\t\t\tdata: this.getABIEncodedTransactionData(),\n\t\t\t\t});\n\t\t\t\treturn self._web3Wrapper.estimateGasAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<void> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<void>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [\n\t\t\t\t\t_collateral.toLowerCase(),\n\t\t\t\t\t_reserve.toLowerCase(),\n\t\t\t\t\t_user.toLowerCase(),\n\t\t\t\t\t_purchaseAmount,\n\t\t\t\t\t_receiveAToken,\n\t\t\t\t]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic flashLoan(\n\t\t_receiver: string,\n\t\t_reserve: string,\n\t\t_amount: BigNumber,\n\t\t_params: string\n\t): ContractTxFunctionObj<void> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_receiver\", _receiver);\n\t\tassert.isString(\"_reserve\", _reserve);\n\t\tassert.isBigNumber(\"_amount\", _amount);\n\t\tassert.isString(\"_params\", _params);\n\t\tconst functionSignature = \"flashLoan(address,address,uint256,bytes)\";\n\n\t\treturn {\n\t\t\tasync sendTransactionAsync(\n\t\t\t\ttxData?: Partial<TxData> | undefined,\n\t\t\t\topts: SendTransactionOpts = { shouldValidate: true }\n\t\t\t): Promise<string> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync(\n\t\t\t\t\t{ ...txData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tthis.estimateGasAsync.bind(this)\n\t\t\t\t);\n\t\t\t\tif (opts.shouldValidate !== false) {\n\t\t\t\t\tawait this.callAsync(txDataWithDefaults);\n\t\t\t\t}\n\t\t\t\treturn self._web3Wrapper.sendTransactionAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tawaitTransactionSuccessAsync(\n\t\t\t\ttxData?: Partial<TxData>,\n\t\t\t\topts: AwaitTransactionSuccessOpts = { shouldValidate: true }\n\t\t\t): PromiseWithTransactionHash<TransactionReceiptWithDecodedLogs> {\n\t\t\t\treturn self._promiseWithTransactionHash(this.sendTransactionAsync(txData, opts), opts);\n\t\t\t},\n\t\t\tasync estimateGasAsync(txData?: Partial<TxData> | undefined): Promise<number> {\n\t\t\t\tconst txDataWithDefaults = await self._applyDefaultsToTxDataAsync({\n\t\t\t\t\t...txData,\n\t\t\t\t\tdata: this.getABIEncodedTransactionData(),\n\t\t\t\t});\n\t\t\t\treturn self._web3Wrapper.estimateGasAsync(txDataWithDefaults);\n\t\t\t},\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<void> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<void>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [\n\t\t\t\t\t_receiver.toLowerCase(),\n\t\t\t\t\t_reserve.toLowerCase(),\n\t\t\t\t\t_amount,\n\t\t\t\t\t_params,\n\t\t\t\t]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic getReserveConfigurationData(\n\t\t_reserve: string\n\t): ContractFunctionObj<[BigNumber, BigNumber, BigNumber, string, boolean, boolean, boolean, boolean]> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_reserve\", _reserve);\n\t\tconst functionSignature = \"getReserveConfigurationData(address)\";\n\n\t\treturn {\n\t\t\tasync callAsync(\n\t\t\t\tcallData: Partial<CallData> = {},\n\t\t\t\tdefaultBlock?: BlockParam\n\t\t\t): Promise<[BigNumber, BigNumber, BigNumber, string, boolean, boolean, boolean, boolean]> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<\n\t\t\t\t\t[BigNumber, BigNumber, BigNumber, string, boolean, boolean, boolean, boolean]\n\t\t\t\t>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [_reserve.toLowerCase()]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic getReserveData(\n\t\t_reserve: string\n\t): ContractFunctionObj<\n\t\t[\n\t\t\tBigNumber,\n\t\t\tBigNumber,\n\t\t\tBigNumber,\n\t\t\tBigNumber,\n\t\t\tBigNumber,\n\t\t\tBigNumber,\n\t\t\tBigNumber,\n\t\t\tBigNumber,\n\t\t\tBigNumber,\n\t\t\tBigNumber,\n\t\t\tBigNumber,\n\t\t\tstring,\n\t\t\tBigNumber\n\t\t]\n\t> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_reserve\", _reserve);\n\t\tconst functionSignature = \"getReserveData(address)\";\n\n\t\treturn {\n\t\t\tasync callAsync(\n\t\t\t\tcallData: Partial<CallData> = {},\n\t\t\t\tdefaultBlock?: BlockParam\n\t\t\t): Promise<\n\t\t\t\t[\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tstring,\n\t\t\t\t\tBigNumber\n\t\t\t\t]\n\t\t\t> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<\n\t\t\t\t\t[\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tstring,\n\t\t\t\t\t\tBigNumber\n\t\t\t\t\t]\n\t\t\t\t>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [_reserve.toLowerCase()]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic getUserAccountData(\n\t\t_user: string\n\t): ContractFunctionObj<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_user\", _user);\n\t\tconst functionSignature = \"getUserAccountData(address)\";\n\n\t\treturn {\n\t\t\tasync callAsync(\n\t\t\t\tcallData: Partial<CallData> = {},\n\t\t\t\tdefaultBlock?: BlockParam\n\t\t\t): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<\n\t\t\t\t\t[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]\n\t\t\t\t>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [_user.toLowerCase()]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic getUserReserveData(\n\t\t_reserve: string,\n\t\t_user: string\n\t): ContractFunctionObj<\n\t\t[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, boolean]\n\t> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tassert.isString(\"_reserve\", _reserve);\n\t\tassert.isString(\"_user\", _user);\n\t\tconst functionSignature = \"getUserReserveData(address,address)\";\n\n\t\treturn {\n\t\t\tasync callAsync(\n\t\t\t\tcallData: Partial<CallData> = {},\n\t\t\t\tdefaultBlock?: BlockParam\n\t\t\t): Promise<\n\t\t\t\t[\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tBigNumber,\n\t\t\t\t\tboolean\n\t\t\t\t]\n\t\t\t> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<\n\t\t\t\t\t[\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tBigNumber,\n\t\t\t\t\t\tboolean\n\t\t\t\t\t]\n\t\t\t\t>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, [_reserve.toLowerCase(), _user.toLowerCase()]);\n\t\t\t},\n\t\t};\n\t}\n\tpublic getReserves(): ContractFunctionObj<string[]> {\n\t\tconst self = (this as any) as LendingPoolContract;\n\t\tconst functionSignature = \"getReserves()\";\n\n\t\treturn {\n\t\t\tasync callAsync(callData: Partial<CallData> = {}, defaultBlock?: BlockParam): Promise<string[]> {\n\t\t\t\tBaseContract._assertCallParams(callData, defaultBlock);\n\t\t\t\tconst rawCallResult = await self._performCallAsync(\n\t\t\t\t\t{ ...callData, data: this.getABIEncodedTransactionData() },\n\t\t\t\t\tdefaultBlock\n\t\t\t\t);\n\t\t\t\tconst abiEncoder = self._lookupAbiEncoder(functionSignature);\n\t\t\t\treturn abiEncoder.strictDecodeReturnValue<string[]>(rawCallResult);\n\t\t\t},\n\t\t\tgetABIEncodedTransactionData(): string {\n\t\t\t\treturn self._strictEncodeArguments(functionSignature, []);\n\t\t\t},\n\t\t};\n\t}\n\n\t/**\n\t * Subscribe to an event type emitted by the LendingPool contract.\n\t * @param eventName The LendingPool contract event you would like to subscribe to.\n\t * @param indexFilterValues An object where the keys are indexed args returned by the event and\n\t * the value is the value you are interested in. E.g `{maker: aUserAddressHex}`\n\t * @param callback Callback that gets called when a log is added/removed\n\t * @param isVerbose Enable verbose subscription warnings (e.g recoverable network issues encountered)\n\t * @return Subscription token used later to unsubscribe\n\t */\n\tpublic subscribe<ArgsType extends LendingPoolEventArgs>(\n\t\teventName: LendingPoolEvents,\n\t\tindexFilterValues: IndexedFilterValues,\n\t\tcallback: EventCallback<ArgsType>,\n\t\tisVerbose: boolean = false,\n\t\tblockPollingIntervalMs?: number\n\t): string {\n\t\tassert.doesBelongToStringEnum(\"eventName\", eventName, LendingPoolEvents);\n\t\tassert.doesConformToSchema(\"indexFilterValues\", indexFilterValues, schemas.indexFilterValuesSchema);\n\t\tassert.isFunction(\"callback\", callback);\n\t\tconst subscriptionToken = this._subscriptionManager.subscribe<ArgsType>(\n\t\t\tthis.address,\n\t\t\teventName,\n\t\t\tindexFilterValues,\n\t\t\tLendingPoolContract.ABI(),\n\t\t\tcallback,\n\t\t\tisVerbose,\n\t\t\tblockPollingIntervalMs\n\t\t);\n\t\treturn subscriptionToken;\n\t}\n\t/**\n\t * Cancel a subscription\n\t * @param subscriptionToken Subscription token returned by `subscribe()`\n\t */\n\tpublic unsubscribe(subscriptionToken: string): void {\n\t\tthis._subscriptionManager.unsubscribe(subscriptionToken);\n\t}\n\t/**\n\t * Cancels all existing subscriptions\n\t */\n\tpublic unsubscribeAll(): void {\n\t\tthis._subscriptionManager.unsubscribeAll();\n\t}\n\t/**\n\t * Gets historical logs without creating a subscription\n\t * @param eventName The LendingPool contract event you would like to subscribe to.\n\t * @param blockRange Block range to get logs from.\n\t * @param indexFilterValues An object where the keys are indexed args returned by the event and\n\t * the value is the value you are interested in. E.g `{_from: aUserAddressHex}`\n\t * @return Array of logs that match the parameters\n\t */\n\tpublic async getLogsAsync<ArgsType extends LendingPoolEventArgs>(\n\t\teventName: LendingPoolEvents,\n\t\tblockRange: BlockRange,\n\t\tindexFilterValues: IndexedFilterValues\n\t): Promise<Array<LogWithDecodedArgs<ArgsType>>> {\n\t\tassert.doesBelongToStringEnum(\"eventName\", eventName, LendingPoolEvents);\n\t\tassert.doesConformToSchema(\"blockRange\", blockRange, schemas.blockRangeSchema);\n\t\tassert.doesConformToSchema(\"indexFilterValues\", indexFilterValues, schemas.indexFilterValuesSchema);\n\t\tconst logs = await this._subscriptionManager.getLogsAsync<ArgsType>(\n\t\t\tthis.address,\n\t\t\teventName,\n\t\t\tblockRange,\n\t\t\tindexFilterValues,\n\t\t\tLendingPoolContract.ABI()\n\t\t);\n\t\treturn logs;\n\t}\n\tconstructor(\n\t\taddress: string,\n\t\tsupportedProvider: SupportedProvider,\n\t\ttxDefaults?: Partial<TxData>,\n\t\tlogDecodeDependencies?: { [contractName: string]: ContractAbi },\n\t\tdeployedBytecode: string | undefined = LendingPoolContract.deployedBytecode\n\t) {\n\t\tsuper(\n\t\t\t\"LendingPool\",\n\t\t\tLendingPoolContract.ABI(),\n\t\t\taddress,\n\t\t\tsupportedProvider,\n\t\t\ttxDefaults,\n\t\t\tlogDecodeDependencies,\n\t\t\tdeployedBytecode\n\t\t);\n\t\tclassUtils.bindAll(this, [\"_abiEncoderByFunctionSignature\", \"address\", \"_web3Wrapper\"]);\n\t\tthis._subscriptionManager = new SubscriptionManager<LendingPoolEventArgs, LendingPoolEvents>(\n\t\t\tLendingPoolContract.ABI(),\n\t\t\tthis._web3Wrapper\n\t\t);\n\t\tLendingPoolContract.ABI().forEach((item, index) => {\n\t\t\tif (item.type === \"function\") {\n\t\t\t\tconst methodAbi = item as MethodAbi;\n\t\t\t\tthis._methodABIIndex[methodAbi.name] = index;\n\t\t\t}\n\t\t});\n\t}\n}\n\n// tslint:disable:max-file-line-count\n// tslint:enable:no-unbound-method no-parameter-reassignment no-consecutive-blank-lines ordered-imports align\n// tslint:enable:trailing-comma whitespace no-trailing-whitespace\n"],"sourceRoot":""}