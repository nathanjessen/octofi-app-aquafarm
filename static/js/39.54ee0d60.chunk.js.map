{"version":3,"sources":["pages/CrossBalance/Table.js","utils/showData.js","utils/crossBalance/index.js","pages/CrossBalance/index.js"],"names":["Table","entities","columns","wrapperClasses","bordered","classes","bootstrap4","keyField","remote","data","ResponsiveTable","breakpoint","direction","showData","placeholder","e","config","getConfig","multicallConfig","rpcUrl","nodeRpc","multicallAddress","queryToken","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","BigNumber","pow","inputValueTransformed","toString","outputValueTransformed","result","times","dividedBy","console","log","getMarketRate","reserveETH","reserveToken","decimals","getPoolInfo","arr","account","Promise","resolve","callArr","obj","exchangeAddress","indexOf","push","target","call","returns","symbol","val","token","Number","multicall","then","res","results","original","i","len","length","poolTokenPercentage","ZERO","balance","Basebalance","market","mul","div","supply","exchangeTokenBalancem","exchangeETHBalance","poolTokenBalance","pecent","catch","err","Button","styled","BS","Title","h1","theme","text1","Header","Card","DefaultCard","CellText","span","CurrencySymbol","CurrencyName","text3","CoinContent","ShowMoreWrap","isBaseUSD","coin","CrossBalance","props","useActiveWeb3React","darkMode","useIsDarkMode","allBalances","useAllBalances","allTokens","useAllTokenDetails","t","useTranslation","useState","query","setQuery","showFull","setShowFull","poolList","setPoolList","poolObj","setPoolObj","baseMarket","setBaseMarket","poolArr","useMemo","totalCount","poolInfoObj","formatData","baseAccountBalance","rwArr","amountFormatter","Math","min","keepDec","plus","baseAmount","tokenAmount","a","resArr","useEffect","getData","dataField","text","formatter","cell","row","rowIndex","className","size","address","toUpperCase","name","CurrencyText","price","as","Link","to","isAction","myAccount","tokenList","Object","keys","map","k","tvl","value","formatEthBalance","formatTokenBalance","formatNum","mt1","getPrice","isNaN","isSwitch","sort","b","isChangeDashboard","ANYItem","splice","unshift","filter","item","toLowerCase","getMyAccount","Page","networkSensitive","Row","Col","xs","lg","offset","ListGroup","horizontal","Item","action","href","active","src","SearchIcon","Form","id","onChange","Array","isArray","slice","variant","onClick","bind"],"mappings":"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","file":"static/js/39.54ee0d60.chunk.js","sourcesContent":["import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nimport \"./style.scss\";\nimport ResponsiveTable from \"../../components/ResponsiveTable\";\n\nexport function Table({ entities, columns }) {\n\treturn (\n\t\t<>\n\t\t\t<BootstrapTable\n\t\t\t\twrapperClasses=\"d-none d-lg-block\"\n\t\t\t\tbordered={false}\n\t\t\t\tclasses=\"table table-head-custom table-borderless table-vertical-center overflow-hidden cross-balance__table\"\n\t\t\t\tbootstrap4\n\t\t\t\tkeyField={\"id\"}\n\t\t\t\tremote\n\t\t\t\tdata={entities === null ? [] : entities}\n\t\t\t\tcolumns={columns}\n\t\t\t/>\n\t\t\t<ResponsiveTable breakpoint={\"lg\"} columns={columns} data={entities} direction={\"rtl\"} />\n\t\t</>\n\t);\n}\n","export const showData = (data, placeholder = '-') => {\n\ttry {\n\t\treturn data || placeholder;\n\t} catch (e) {\n\t\treturn placeholder;\n\t}\n}","import * as multicall from '@makerdao/multicall'\n\nimport getConfig from '../../config'\nimport {ZERO} from \"../../constants\";\nimport BigNumber from \"bignumber.js\";\n\nconst config = getConfig();\nconst multicallConfig = {\n\trpcUrl: config.nodeRpc,\n\tmulticallAddress: config.queryToken\n}\n\n\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n\ttry {\n\t\tif (\n\t\t\tinputValue &&\n\t\t\t(inputDecimals || inputDecimals === 0) &&\n\t\t\toutputValue &&\n\t\t\t(outputDecimals || outputDecimals === 0)\n\t\t) {\n\t\t\tconst factor = new BigNumber(10).pow(new BigNumber(18))\n\t\t\tconst inputValueTransformed = new BigNumber(inputValue.toString());\n\t\t\tconst outputValueTransformed = new BigNumber(outputValue.toString());\n\n\t\t\tif (invert) {\n\t\t\t\tconst result = inputValueTransformed\n\t\t\t\t\t.times(factor)\n\t\t\t\t\t.times(new BigNumber(10).pow(new BigNumber(outputDecimals)))\n\t\t\t\t\t.dividedBy(new BigNumber(10).pow(new BigNumber(inputDecimals)))\n\t\t\t\t\t.dividedBy(outputValueTransformed)\n\t\t\t\tconsole.log(result);\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tconst result = outputValueTransformed\n\t\t\t\t\t.times(factor)\n\t\t\t\t\t.times(new BigNumber(10).pow(new BigNumber(inputDecimals)))\n\t\t\t\t\t.dividedBy(new BigNumber(10).pow(new BigNumber(outputDecimals)))\n\t\t\t\t\t.dividedBy(inputValueTransformed)\n\t\t\t\tconsole.log(result);\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t} catch (e) {\n\t\tconsole.log(e);\n\t}\n}\n\nfunction getMarketRate(reserveETH, reserveToken, decimals, invert = false) {\n\treturn getExchangeRate(reserveETH, 18, reserveToken, decimals, invert)\n}\n\nexport function getPoolInfo (arr, account) {\n\treturn new Promise(resolve => {\n\t\tlet callArr = []\n\t\tfor (let obj of arr) {\n\t\t\tif (!obj.exchangeAddress || obj.exchangeAddress.indexOf('0x') !== 0) continue\n\t\t\tcallArr.push(...[\n\t\t\t\t{\n\t\t\t\t\ttarget: obj.exchangeAddress,\n\t\t\t\t\tcall: ['totalSupply()(uint256)'],\n\t\t\t\t\treturns: [['TS_' + obj.symbol, val => val / 10 ** 18]]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttarget: obj.token,\n\t\t\t\t\tcall: ['balanceOf(address)(uint256)', obj.exchangeAddress],\n\t\t\t\t\treturns: [['exchangeTokenBalancem_' + obj.symbol, val => val / 10 ** Number(obj.decimals)]]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcall: ['getEthBalance(address)(uint256)', obj.exchangeAddress],\n\t\t\t\t\treturns: [['exchangeETHBalance_' + obj.symbol, val => val / 10 ** Number(obj.decimals)]]\n\t\t\t\t}\n\t\t\t])\n\t\t\tif (account) {\n\t\t\t\tcallArr.push({\n\t\t\t\t\ttarget: obj.exchangeAddress,\n\t\t\t\t\tcall: ['balanceOf(address)(uint256)', account],\n\t\t\t\t\treturns: [['poolTokenBalance_' + obj.symbol, val => val / 10 ** Number(obj.decimals)]]\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\t// console.log(callArr)\n\t\t// console.log(multicallConfig)\n\t\tmulticall.aggregate([...callArr], multicallConfig).then(res => {\n\t\t\t// console.log(res)\n\t\t\tif (res.results) {\n\t\t\t\tlet result = res.results.original\n\t\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\t\tlet obj = arr[i]\n\t\t\t\t\tlet poolTokenPercentage = ZERO\n\t\t\t\t\tlet balance = ZERO, Basebalance = 0, market = ZERO\n\t\t\t\t\tif (Number(result['TS_' + obj.symbol]) && Number(result['poolTokenBalance_' + obj.symbol])) {\n\t\t\t\t\t\tpoolTokenPercentage = result['poolTokenBalance_' + obj.symbol].mul(new BigNumber(10).pow(new BigNumber(18))).div(result['TS_' + obj.symbol])\n\t\t\t\t\t\tif (Number(result['exchangeTokenBalancem_' + obj.symbol])) {\n\t\t\t\t\t\t\tbalance = result['exchangeTokenBalancem_' + obj.symbol].mul(poolTokenPercentage).div(new BigNumber(10).pow(new BigNumber(18)))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Number(result['exchangeETHBalance_' + obj.symbol])) {\n\t\t\t\t\t\t\tBasebalance = result['exchangeETHBalance_' + obj.symbol].mul(poolTokenPercentage).div(new BigNumber(10).pow(new BigNumber(18)))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (Number(result['exchangeETHBalance_' + obj.symbol]) && Number(result['exchangeTokenBalancem_' + obj.symbol])) {\n\t\t\t\t\t\tmarket = getMarketRate(result['exchangeETHBalance_' + obj.symbol], result['exchangeTokenBalancem_' + obj.symbol], obj.decimals)\n\t\t\t\t\t}\n\t\t\t\t\tarr[i].supply = result['TS_' + obj.symbol] ? result['TS_' + obj.symbol] : ZERO\n\t\t\t\t\tarr[i].exchangeTokenBalancem = result['exchangeTokenBalancem_' + obj.symbol] ? result['exchangeTokenBalancem_' + obj.symbol] : ZERO\n\t\t\t\t\tarr[i].exchangeETHBalance = result['exchangeETHBalance_' + obj.symbol] ? result['exchangeETHBalance_' + obj.symbol] : ZERO\n\t\t\t\t\tarr[i].poolTokenBalance = result['poolTokenBalance_' + obj.symbol] ? result['poolTokenBalance_' + obj.symbol] : ZERO\n\t\t\t\t\tarr[i].pecent = poolTokenPercentage\n\t\t\t\t\tarr[i].balance = balance\n\t\t\t\t\tarr[i].Basebalance = Basebalance\n\t\t\t\t\tarr[i].market = market\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(arr)\n\t\t\tresolve(arr)\n\t\t}).catch(err => {\n\t\t\tconsole.log(err)\n\t\t})\n\t})\n}\n","import styled from \"styled-components\";\nimport { Row, Col, Button as BS, ListGroup } from \"react-bootstrap\";\nimport SVG from \"react-inlinesvg\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport TokenLogo from \"../../components/CrossTokenLogo\";\nimport getConfig from \"../../config\";\nimport Page from \"../../components/Page\";\nimport DefaultCard from \"../../components/Card\";\nimport { useIsDarkMode } from \"../../state/user/hooks\";\nimport {\n\tInputGroup,\n\tInputGroupFormControl as FormControl,\n\tInputGroupPrepend,\n\tInputGroupText,\n} from \"../../components/Form\";\nimport SearchIcon from \"../../assets/images/search.svg\";\nimport CurrencyText from \"../../components/CurrencyText\";\nimport { Table } from \"./Table\";\nimport { darken } from \"polished\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useAllBalances } from \"../../contexts/Balances\";\nimport { useAllTokenDetails } from \"../../contexts/Tokens\";\nimport { amountFormatter, formatEthBalance, formatNum, formatTokenBalance } from \"../../utils/cross\";\nimport BigNumber from \"bignumber.js\";\nimport { showData } from \"../../utils/showData\";\nimport { getPoolInfo } from \"../../utils/crossBalance\";\n\nconst config = getConfig();\n\nconst Button = styled(BS)`\n\tmin-height: 48px;\n\theight: 48px;\n\tborder-radius: 18px;\n\tfont-weight: 500;\n\tfont-size: 1rem;\n\tmin-width: 105px;\n\n\t@media (max-width: 991px) {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tline-height: 1;\n\t\tfont-size: 0.875rem;\n\t\tmin-height: 40px;\n\t\theight: 40px;\n\t\tpadding: 0;\n\t\tborder-radius: 12px;\n\t}\n`;\n\nconst Title = styled.h1`\n\tmargin: 0;\n\tfont-size: 2.5rem;\n\tfont-weight: 700;\n\tcolor: ${({ theme }) => theme.text1};\n\tline-height: 3rem;\n\n\t@media (max-width: 1199px) {\n\t\tfont-size: 2.25rem;\n\t}\n\t@media (max-width: 991px) {\n\t\tfont-size: 2rem;\n\t\tmargin-bottom: 0.5rem;\n\t}\n\t@media (max-width: 767px) {\n\t\tfont-size: 1.5rem;\n\t}\n`;\n\nconst Header = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tmargin-bottom: 24px;\n\tmargin-top: 40px;\n\n\t@media (max-width: 991px) {\n\t\tmargin-top: 10px;\n\t\tflex-direction: column;\n\t\talign-items: stretch;\n\t}\n`;\n\nconst Card = styled(DefaultCard)`\n\t& > .card-body {\n\t\tpadding: 30px 30px 24px;\n\n\t\t@media (max-width: 576px) {\n\t\t\tpadding: 16px;\n\t\t}\n\t}\n`;\n\nconst CellText = styled.span`\n\tfont-size: 1rem;\n\tfont-weight: 500;\n\tcolor: ${({ theme }) => theme.text1};\n\tdisplay: block;\n\tline-height: 1.25rem;\n\n\t@media (max-width: 991px) {\n\t\tfont-size: 0.875rem;\n\t}\n\t@media (max-width: 767px) {\n\t\tfont-size: 0.75rem;\n\t}\n`;\n\nconst CurrencySymbol = styled(CellText)`\n\tmargin-bottom: 5px;\n\n\t@media (max-width: 991px) {\n\t\tmargin-bottom: 0;\n\t}\n`;\n\nconst CurrencyName = styled.span`\n\tfont-size: 0.875rem;\n\tfont-weight: 400;\n\tline-height: 1.125rem;\n\tcolor: ${({ theme }) => theme.text3};\n\n\t@media (max-width: 991px) {\n\t\tfont-size: 0.75rem;\n\t}\n\t@media (max-width: 767px) {\n\t\tfont-size: 0.625rem;\n\t}\n`;\n\nconst CoinContent = styled.div`\n\tmargin-left: 45px;\n\n\t@media (max-width: 1199px) {\n\t\tmargin-left: 24px;\n\t}\n\n\t@media (max-width: 991px) {\n\t\tmargin-left: 0;\n\t\tmargin-right: 24px;\n\t}\n\n\t@media (max-width: 991px) {\n\t\tmargin-right: 16px;\n\t}\n`;\n\nconst ShowMoreWrap = styled.div`\n\tborder-top: 1px solid rgba(255, 255, 255, 0.5);\n\tpadding-top: 2rem;\n\ttext-align: center;\n`;\n\nfunction isBaseUSD(coin) {\n\tif (\n\t\t(coin === \"aUSDT\" && config.symbol === \"FSN\") ||\n\t\t(coin === \"anyUSDT\" && config.symbol === \"FTM\") ||\n\t\t(coin === \"HUSD\" && config.symbol === \"HT\") ||\n\t\t(coin === \"USDTB\" && config.symbol === \"BNB\") ||\n\t\t(coin === \"USDC\" && config.symbol === \"ETH\")\n\t) {\n\t\treturn true;\n\t} else if (coin === \"anyUSDT\") {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nconst CrossBalance = (props) => {\n\tconst { account } = useActiveWeb3React();\n\tconst darkMode = useIsDarkMode();\n\tconst allBalances = useAllBalances();\n\tconst allTokens = useAllTokenDetails();\n\tconst { t } = useTranslation();\n\tconst [query, setQuery] = useState(\"\");\n\tconst [showFull, setShowFull] = useState(false);\n\tconst [poolList, setPoolList] = useState([]);\n\tconst [poolObj, setPoolObj] = useState({});\n\tconst [baseMarket, setBaseMarket] = useState();\n\tconst [pagecount, setPagecount] = useState(0);\n\n\tconst changeSearchInput = (e) => {\n\t\tsetQuery(e.target.value);\n\t};\n\n\tconst poolArr = useMemo(() => {\n\t\tconst arr = [];\n\t\tfor (const obj in allTokens) {\n\t\t\tarr.push({\n\t\t\t\ttoken: obj,\n\t\t\t\texchangeAddress: allTokens[obj].exchangeAddress,\n\t\t\t\t...allTokens[obj],\n\t\t\t});\n\t\t}\n\t\treturn arr;\n\t}, [allTokens]);\n\n\tconst totalCount = poolArr.length;\n\tconst poolInfoObj = {};\n\n\tfunction formatData(res) {\n\t\tlet arr = [];\n\t\tlet baseAccountBalance = new BigNumber(0);\n\t\tlet rwArr = [];\n\t\tfor (let obj of res) {\n\t\t\tconsole.log(obj);\n\t\t\tobj.pecent = amountFormatter(obj.pecent, 18, Math.min(config.keepDec, obj.decimals));\n\t\t\tobj.balance = amountFormatter(obj.balance, obj.decimals, Math.min(config.keepDec, obj.decimals));\n\t\t\tif (obj.Basebalance) {\n\t\t\t\tbaseAccountBalance = baseAccountBalance.plus(obj.Basebalance);\n\t\t\t}\n\t\t\t// if (obj.exchangeETHBalance) {\n\t\t\t//   baseAllBalance = baseAllBalance.add(obj.exchangeETHBalance)\n\t\t\t// }\n\t\t\tif (isBaseUSD(obj.symbol)) {\n\t\t\t\tconsole.log(obj.market, 18, Math.min(config.keepDec, obj.decimals));\n\t\t\t\tsetBaseMarket(Number(amountFormatter(obj.market, 18, Math.min(config.keepDec, obj.decimals))));\n\t\t\t}\n\t\t\tpoolInfoObj[obj.symbol] = obj;\n\t\t\tarr.push(obj);\n\t\t\tif (obj.exchangeETHBalance && obj.exchangeTokenBalancem && obj.market) {\n\t\t\t\trwArr.push({\n\t\t\t\t\tcoin: obj.symbol,\n\t\t\t\t\tmarket: obj.market ? obj.market.toString() : 0,\n\t\t\t\t\tbaseAmount: obj.exchangeETHBalance ? obj.exchangeETHBalance.toString() : 0,\n\t\t\t\t\ttokenAmount: obj.exchangeTokenBalancem ? obj.exchangeTokenBalancem.toString() : 0,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (arr[0].symbol === config.symbol) {\n\t\t\tarr[0].Basebalance = baseAccountBalance;\n\t\t\tpoolInfoObj[config.symbol].Basebalance = baseAccountBalance;\n\t\t}\n\t\tsetPoolObj(poolInfoObj);\n\t\treturn arr;\n\t}\n\n\tasync function getData(account) {\n\t\tlet arr = [];\n\t\tfor (let i = 0; i <= totalCount; i++) {\n\t\t\tconst resArr = poolArr;\n\n\t\t\tconst result = await getPoolInfo(resArr, account);\n\t\t\tarr.push(...formatData(result));\n\t\t\tsetPoolList(arr);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (poolArr.length > 0) {\n\t\t\tif (poolList.length <= 0) {\n\t\t\t\tsetPoolList(poolArr);\n\t\t\t}\n\t\t\tgetData(account);\n\t\t}\n\t}, [poolArr, account]);\n\n\tfunction getPrice(market, coin) {\n\t\tif (isBaseUSD(coin)) {\n\t\t\treturn \"1\";\n\t\t}\n\t\tif (!market) return \"-\";\n\t\tlet mt1 = Number(amountFormatter(market, 18, config.keepDec));\n\t\tif (!mt1) return \"0\";\n\t\treturn formatNum(baseMarket / mt1, config.keepDec);\n\t}\n\n\tconst columns = useMemo(() => {\n\t\treturn [\n\t\t\t{\n\t\t\t\tdataField: \"coin\",\n\t\t\t\ttext: t(\"cross.coin\"),\n\t\t\t\tformatter: (cell, row, rowIndex) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"d-flex align-items-center flex-row-reverse flex-lg-row\">\n\t\t\t\t\t\t\t<TokenLogo size={\"32px\"} address={row?.symbol} />\n\t\t\t\t\t\t\t<CoinContent className=\"d-flex flex-column align-items-stretch justify-content-center\">\n\t\t\t\t\t\t\t\t<CurrencySymbol>{showData(row?.symbol?.toUpperCase())}</CurrencySymbol>\n\t\t\t\t\t\t\t\t<CurrencyName>{showData(row?.name)}</CurrencyName>\n\t\t\t\t\t\t\t</CoinContent>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdataField: \"price\",\n\t\t\t\ttext: t(\"cross.price\"),\n\t\t\t\tformatter: (cell, row, rowIndex) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<CellText>\n\t\t\t\t\t\t\t<CurrencyText>{showData(row?.price)}</CurrencyText>\n\t\t\t\t\t\t</CellText>\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdataField: \"balance\",\n\t\t\t\ttext: t(\"cross.balance\"),\n\t\t\t\tformatter: (cell, row, rowIndex) => {\n\t\t\t\t\treturn <CellText>{account ? showData(row?.balance) : \"-\"}</CellText>;\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdataField: \"totalBalance\",\n\t\t\t\ttext: t(\"cross.totalBalance\"),\n\t\t\t\tformatter: (cell, row, rowIndex) => {\n\t\t\t\t\treturn <CellText>{account ? showData(row?.balance) : \"-\"}</CellText>;\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdataField: \"action\",\n\t\t\t\ttext: t(\"cross.action\"),\n\t\t\t\tformatter: (cell, row, rowIndex) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\t\tclassName={\"btn btn-light-primary\"}\n\t\t\t\t\t\t\tto={`/cross/anyswap?inputCurrency=${row?.address}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSwap\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tisAction: true,\n\t\t\t},\n\t\t];\n\t}, []);\n\n\tfunction getMyAccount() {\n\t\tif (!account) return {};\n\n\t\tconst myAccount = account ? allBalances[account] : \"\";\n\n\t\tlet tokenList = Object.keys(allTokens).map((k) => {\n\t\t\tlet balance = \"-\";\n\t\t\tlet price = \"-\";\n\t\t\tlet tvl = 0;\n\n\t\t\tif (k === config.symbol && myAccount && myAccount[k] && myAccount[k].value) {\n\t\t\t\tbalance = formatEthBalance(new BigNumber(myAccount[k].value));\n\t\t\t} else if (myAccount && myAccount[k] && myAccount[k].value) {\n\t\t\t\tbalance = formatTokenBalance(new BigNumber(myAccount[k].value), allTokens[k].decimals);\n\t\t\t}\n\t\t\tif (poolObj[allTokens[k].symbol] && baseMarket) {\n\t\t\t\tif (allTokens[k].symbol === config.symbol) {\n\t\t\t\t\tprice = formatNum(baseMarket, config.keepDec);\n\t\t\t\t} else {\n\t\t\t\t\tprice = getPrice(poolObj[allTokens[k].symbol].market, allTokens[k].symbol);\n\t\t\t\t}\n\t\t\t\tif (!isNaN(balance) && !isNaN(price)) {\n\t\t\t\t\ttvl = Number(balance) * Number(price);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tname: allTokens[k].name,\n\t\t\t\tsymbol: allTokens[k].symbol,\n\t\t\t\taddress: k,\n\t\t\t\tbalance: balance,\n\t\t\t\tisSwitch: allTokens[k].isSwitch,\n\t\t\t\tprice: price,\n\t\t\t\ttvl: tvl,\n\t\t\t};\n\t\t});\n\n\t\ttokenList.sort((a, b) => {\n\t\t\tif (!isNaN(a.tvl) && !isNaN(b.tvl) && Number(a.tvl) > Number(b.tvl)) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t});\n\n\t\tif (config.isChangeDashboard) {\n\t\t\tlet ANYItem = {};\n\t\t\tfor (let i = 0, len = tokenList.length; i < len; i++) {\n\t\t\t\tif (tokenList[i].symbol === \"ANY\") {\n\t\t\t\t\tANYItem = tokenList[i];\n\t\t\t\t\ttokenList.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttokenList.unshift(ANYItem);\n\t\t}\n\n\t\treturn tokenList.length > 0\n\t\t\t? tokenList.filter((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t!query ||\n\t\t\t\t\t\titem.name.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\n\t\t\t\t\t\titem.symbol.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\n\t\t\t\t\t\titem.address.toLowerCase().indexOf(query.toLowerCase()) !== -1\n\t\t\t\t\t);\n\t\t\t  })\n\t\t\t: [];\n\t}\n\n\tconst data = getMyAccount();\n\treturn (\n\t\t<Page networkSensitive={false}>\n\t\t\t<Row>\n\t\t\t\t<Col xs={12} lg={{ span: 10, offset: 1 }}>\n\t\t\t\t\t<ListGroup horizontal className=\"mb-5\">\n\t\t\t\t\t\t<ListGroup.Item action href=\"/#/cross/anyswap\">\n\t\t\t\t\t\t\t{t(\"menu.anySwap\")}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t<ListGroup.Item action href=\"/#/cross/bridges\">\n\t\t\t\t\t\t\t{t(\"menu.bridges\")}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t<ListGroup.Item action href=\"/#/cross/balance\" active>\n\t\t\t\t\t\t\t{t(\"menu.crossBalance\")}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t</ListGroup>\n\n\t\t\t\t\t<Header>\n\t\t\t\t\t\t<Title>Balance</Title>\n\t\t\t\t\t\t<InputGroup className={\"w-auto\"}>\n\t\t\t\t\t\t\t<InputGroupPrepend>\n\t\t\t\t\t\t\t\t<InputGroupText>\n\t\t\t\t\t\t\t\t\t<SVG src={SearchIcon} />\n\t\t\t\t\t\t\t\t</InputGroupText>\n\t\t\t\t\t\t\t</InputGroupPrepend>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\t\t\tid=\"CrossBalanceSearch\"\n\t\t\t\t\t\t\t\tplaceholder={t(\"search\")}\n\t\t\t\t\t\t\t\tonChange={changeSearchInput}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</Header>\n\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<div className=\"d-flex flex-column align-items-stretch\">\n\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t\tentities={!Array.isArray(data) ? [] : !showFull ? data?.slice(0, 3) : data}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{!showFull && (\n\t\t\t\t\t\t\t\t<ShowMoreWrap>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant={darkMode ? \"outline-primary\" : \"primary\"}\n\t\t\t\t\t\t\t\t\t\tonClick={setShowFull.bind(this, true)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSee More\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</ShowMoreWrap>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Page>\n\t);\n};\n\nexport default CrossBalance;\n"],"sourceRoot":""}